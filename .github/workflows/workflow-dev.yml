name: CI/CD Pipeline - Develop

on:
  push:
    branches:
      - develop
  pull_request:
    branches:
      - develop

jobs:
  test_and_build_backend:
    runs-on: ubuntu-latest
    services:
      mysql:  
        image: mysql:8
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: sa2
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping -h 127.0.0.1 --silent"

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: "temurin"
          java-version: "21"

      - name: Set up Maven Cache
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Set environment variables from secrets
        run: |
          echo "JWT_SECRET=${{ secrets.JWT_SECRET }}" >> $GITHUB_ENV
          echo "STRIPE_TEST_KEY=${{ secrets.STRIPE_TEST_KEY }}" >> $GITHUB_ENV
          echo "SPRING_MAIL_USERNAME=${{ secrets.SPRING_MAIL_USERNAME }}" >> $GITHUB_ENV
          echo "SPRING_MAIL_PASSWORD=${{ secrets.SPRING_MAIL_PASSWORD }}" >> $GITHUB_ENV

      - name: Run Unit Tests (JUnit)
        run: |
          cd restaurant
          mvn clean install -DskipTests=false
          mvn test

      - name: Start Backend
        run: |
          cd restaurant
          nohup mvn spring-boot:run > backend.log 2>&1 &
          echo "Waiting for backend to start..."
          for i in {1..30}; do
            curl --silent --head --fail http://localhost:8088/api/health && break
            echo "Waiting for backend..."
            sleep 2
          done || (echo "Backend failed to start" && exit 1)

  test_and_build_frontend:
    runs-on: ubuntu-latest
    needs: test_and_build_backend
    services:
      mysql:
        image: mysql:8
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: sa2
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping -h 127.0.0.1 --silent"

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Node.js 18
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Cache node_modules
        uses: actions/cache@v3
        with:
          path: |
            frontend/node_modules
            frontend/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('frontend/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install frontend dependencies
        working-directory: frontend
        run: npm ci

      - name: Build frontend
        working-directory: frontend
        run: npm run build

      - name: Install Playwright
        working-directory: frontend
        run: npx playwright install --with-deps

      - name: Start Backend for Frontend Tests
        run: |
          cd restaurant
          nohup mvn spring-boot:run -Dspring-boot.run.profiles=ci > backend.log 2>&1 &
          echo "Waiting for backend to start..."
          for i in {1..30}; do
            curl --silent --head --fail http://localhost:8088/api/health && break
            echo "Waiting for backend..."
            sleep 2
          done || (echo "Backend failed to start" && exit 1)

      - name: Start Frontend
        working-directory: frontend
        run: |
          nohup npm run dev -- --port 5173 > frontend.log 2>&1 &
          echo "Waiting for frontend to start..."
          for i in {1..30}; do
            curl --silent --head --fail http://localhost:5173 && break
            echo "Waiting for frontend..."
            sleep 2
          done || (echo "Frontend failed to start" && exit 1)
        env:
          VITE_API_URL: http://localhost:8088

      - name: Run Playwright Tests
        working-directory: frontend
        run: npx playwright test
        env:
          API_BASE_URL: http://localhost:8088/api
