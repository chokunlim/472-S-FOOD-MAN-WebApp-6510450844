name: CI/CD Pipeline

on:
  push:
    branches:
      - develop
      - test/ci
  pull_request:
    branches:
      - develop

jobs:
  test_and_build_backend:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/develop' || github.ref == 'refs/heads/test/ci' || github.event_name == 'pull_request'
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: "temurin"
          java-version: "21"

      - name: Set up Maven Cache
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Set environment variables from secrets
        run: |
          echo "JWT_SECRET=${{ secrets.JWT_SECRET }}" >> $GITHUB_ENV
          echo "STRIPE_TEST_KEY=${{ secrets.STRIPE_TEST_KEY }}" >> $GITHUB_ENV
          echo "SPRING_MAIL_USERNAME=${{ secrets.MAIL_USERNAME }}" >> $GITHUB_ENV
          echo "SPRING_MAIL_PASSWORD=${{ secrets.MAIL_PASSWORD }}" >> $GITHUB_ENV

      - name: Run Unit Tests (JUnit)
        run: |
          cd restaurant
          mvn clean install -DskipTests=false
          mvn test

      - name: Build Spring Boot Docker Image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/spring-backend:latest -f restaurant/Dockerfile backend

  test_and_build_frontend:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/develop' || github.ref == 'refs/heads/test/ci' || github.event_name == 'pull_request'
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20
          cache: "npm"
          cache-dependency-path: frontend/package-lock.json

      - name: Install Playwright Browsers
        run: npx playwright install --with-deps

      - name: Install Dependencies and Build
        run: |
          cd frontend
          npm install
          npm run build

          - name: Start Backend
          run: |
            cd restaurant
            mvn spring-boot:run &> backend.log &
          env:
            JWT_SECRET: ${{ secrets.JWT_SECRET }}
            STRIPE_TEST_KEY: ${{ secrets.STRIPE_TEST_KEY }}
            SPRING_MAIL_USERNAME: ${{ secrets.MAIL_USERNAME }}
            SPRING_MAIL_PASSWORD: ${{ secrets.MAIL_PASSWORD }}
        
      - name: Show Backend Logs
        run: cat backend.log
        
      - name: Start Frontend
        run: |
          cd frontend
          npm run dev &
      
      - name: Wait for Backend to be Ready
        run: |
          timeout 120s bash -c 'until curl -s http://localhost:8088 | grep "UP"; do sleep 10; done || { echo "Backend did not start"; exit 1; }'
      
      - name: Wait for Frontend to be Ready
        run: |
          timeout 120s bash -c 'until curl -s http://localhost:5173 | grep "<title>"; do sleep 10; done || { echo "Frontend did not start"; exit 1; }'

      - name: Run Playwright Tests
        run: |
          cd frontend
          npx playwright test
        