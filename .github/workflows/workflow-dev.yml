name: CI/CD Pipeline - Develop

on:
  push:
    branches:
      - develop
      - test/ci
      - v1
  pull_request:
    branches:
      - develop

jobs:
  test_and_build_backend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: "temurin"
          java-version: "21"

      - name: Set up Maven Cache
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Set environment variables from secrets
        run: |
          echo "JWT_SECRET=${{ secrets.JWT_SECRET }}" >> $GITHUB_ENV
          echo "STRIPE_TEST_KEY=${{ secrets.STRIPE_TEST_KEY }}" >> $GITHUB_ENV
          echo "EMAIL_USERNAME=${{ secrets.EMAIL_USERNAME }}" >> $GITHUB_ENV
          echo "EMAIL_PASSWORD=${{ secrets.EMAIL_PASSWORD }}" >> $GITHUB_ENV

      - name: Run Unit Tests (JUnit)
        run: |
          cd restaurant
          mvn clean install -DskipTests=false
          mvn test

      - name: Build Backend Dockerfile
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/spring-backend:latest -f restaurant/Dockerfile backend


  test_and_build_frontend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20
          cache: "npm"
          cache-dependency-path: frontend/package-lock.json

      - name: Install Dependencies & Playwright
        run: |
          cd frontend
          npm install
          npx playwright install --with-deps

      - name: Start Frontend
        run: |
          cd frontend
          npm run dev

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: "temurin"
          java-version: "21"

      - name: Set up Maven Cache
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Set environment variables from secrets
        run: |
          echo "JWT_SECRET=${{ secrets.JWT_SECRET }}" >> $GITHUB_ENV
          echo "STRIPE_TEST_KEY=${{ secrets.STRIPE_TEST_KEY }}" >> $GITHUB_ENV
          echo "EMAIL_USERNAME=${{ secrets.EMAIL_USERNAME }}" >> $GITHUB_ENV
          echo "EMAIL_PASSWORD=${{ secrets.EMAIL_PASSWORD }}" >> $GITHUB_ENV

      - name: Start Backend
        run: |
          cd restaurant
          mvn clean install -DskipTests=false
          mvn spring-boot:run

      - name: Run Playwright Tests
        run: |
          cd frontend
          npx playwright test

      - name: Build Vue.js Frontend
        run: |
          cd frontend
          npm run build

      - name: Build Frontend Dockerfile
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/vue-frontend:latest -f frontend/Dockerfile frontend
          